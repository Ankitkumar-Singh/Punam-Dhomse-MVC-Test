//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore.Models
{
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web;

    public partial class BookDetail
    {
        #region "Books Details"
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public BookDetail()
        {
            this.Orders = new HashSet<Order>();
        }

        [Required]
        [Display(Name = "Author Name")]
        public short Author_Id { get; set; }

        [Required(ErrorMessage = "Language cannot be empty")]
        [RegularExpression("^([a-zA-Z]{2,})$", ErrorMessage = "Language contains only alphabets")]
        public string Language { get; set; }

        [Display(Name = "Supplier Name")]
        [Required(ErrorMessage = "Supplier name cannot be empty")]
        [RegularExpression("^([a-zA-Z\\s]{2,})$", ErrorMessage = "Supplier name contains only alphabets")]
        public string Supplier { get; set; }

        [Required(ErrorMessage = "Price cannot be empty")]
        [RegularExpression("^([0-9]{2,})$", ErrorMessage = "Price must be numeric")]
        public double Price { get; set; }
        public int ISBN { get; set; }


        [Required(ErrorMessage = "Publisher name cannot be empty")]
        [RegularExpression("^([a-zA-Z\\s]{2,})$", ErrorMessage = "Publisher name contains only alphabets")]
        public string Publisher { get; set; }

        [Required(ErrorMessage = "Tittle cannot be empty")]
        [Display(Name = "Title")]
        public string Tittle { get; set; }

        [Required]
        [Display(Name = "Image")]
        public string Url { get; set; }

        [Required(ErrorMessage = "ISBN cannot be empty")]
        [Display(Name = "ISBN")]
        [RegularExpression("^([0-9\\s]{2,})$", ErrorMessage = "ISBN must be numeric")]
        public string InternationalNumber { get; set; }

        public HttpPostedFileBase ImageFile { get; set; }

        public virtual AuthorDetail AuthorDetail { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Orders { get; set; }
    }
    #endregion
}
